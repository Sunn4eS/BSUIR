#include <sys/stat.h>
#include <sys/types.h>
#include <stdio.h>
#include <time.h>
#include <dirent.h>
#include <string.h>

time_t parse_time(const char *datetime) { 
    struct tm tm;
    if (strptime(datetime, "%Y-%m-%d %H:%M:%S", &tm) != 0) { 
        return mktime(&tm);
    }
}

void printInfo(char* dirName, FILE *outFile, int minSize, int maxSize, time_t minTime, time_t maxTime) {
    DIR *direct = opendir(dirName);
    if (direct) {    
        struct dirent *start;
        while ((start = readdir(direct)) != NULL) {      
            if (strcmp(start->d_name, ".") != 0 && strcmp(start->d_name, "..") != 0) { 
                char path[1024];
                snprintf(path, sizeof(path), "%s/%s", dirName, start->d_name);
                
                struct stat st;
                if (stat(path, &st) != -1) { 
                    if (S_ISDIR(st.st_mode)) {
                        printInfo(path, outFile, minSize, maxSize, minTime, maxTime);
                    } else {
                        if (st.st_size <= maxSize && st.st_size >= minSize && st.st_mtime <= maxTime && st.st_mtime >= minTime) {
                            fprintf(outFile, "Имя файла: %s\nРазмер файла: %ld\nДата изменения: %s", path, st.st_size, ctime(&st.st_mtime));
                            printf("Имя файла: %s\nРазмер файла: %ld\nДата изменения: %s", path, st.st_size, ctime(&st.st_mtime));
                        }
                    }
                } else {
                    printf("Ошибка о файле\n");
                }
            }
        }
    }
}

int main(int argc, char* argv[]) {
    
    if (argc != 7) {
        printf("Введите аргументы: <каталог> <выходной файл> <min size> <max size> <min time> <max time>\n\n");
    } else {
        char* dirName = argv[1];
        char* outFileName = argv[2];
        long minSize = atol(argv[3]);
        long maxSize = atol(argv[4]);
        time_t minTime = parse_time(argv[5]);
        time_t maxTime = parse_time(argv[6]);
    
        FILE *outFile = fopen(outFileName, "w");
        if (!outFile) {
            printf("Ошибка открытия файла!");
        } else {
            printInfo(dirName, outFile, minSize, maxSize, minTime, maxTime);
            fclose(outFile);
        }
    }
    return 0;
}
